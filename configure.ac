# -*- shell-script -*-
#
# Copyright (c) 2013 Cisco Systems, Inc.  All rights reserved.
# Copyright (c) 2013      University of Wisconsin-La Crosse.
#                         All rights reserved.
#
# $COPYRIGHT$
# 
# See COPYING in top-level directory.
# 
# Additional copyrights may follow
# 
# $HEADER$
#

AC_LANG([C++])

AC_INIT([netloc],
        [m4_normalize(esyscmd([config/netloc_get_version.sh VERSION --version]))],
        [http://www.open-mpi.org/projects/netloc/], [netloc])
AC_PREREQ(2.63)
AC_CONFIG_AUX_DIR(config)
AC_CONFIG_MACRO_DIR(config)

AM_INIT_AUTOMAKE([foreign dist-bzip2 no-define 1.11 -Wall -Werror])
AM_SILENT_RULES([yes])

# We want new Libtool.  None of that old stuff.  Pfft.    
m4_ifdef([LT_PREREQ], [],
	 [m4_fatal([libtool version 2.2.6 or higher is required], [63])])
LT_PREREQ([2.2.6])

# Get the version of netloc that we are installing
AC_MSG_CHECKING([for netloc version])
NETLOC_VERSION="`$srcdir/config/netloc_get_version.sh $srcdir/VERSION`"
if test "$?" != "0"; then
    AC_MSG_ERROR([Cannot continue])
fi
NETLOC_RELEASE_DATE="`$srcdir/config/netloc_get_version.sh $srcdir/VERSION --release-date`"
AC_SUBST(NETLOC_VERSION)
AC_SUBST(NETLOC_RELEASE_DATE)
AC_MSG_RESULT([$NETLOC_VERSION])

# Override/fixup the version numbers set by AC_INIT, since on
# developer builds, there's no good way to know what the version is
# before running configure :(.  We only use the base version number
# (ie, no svn r numbers) for the version set in AC_INIT.  This will
# always match reality because we add the VERSION file (the only way
# to change the major.minor.release{greek}) into the configure
# dependencies.

PACKAGE_VERSION="$NETLOC_VERSION"
PACKAGE_STRING="${PACKAGE_NAME} ${PACKAGE_VERSION}"
VERSION="${PACKAGE_VERSION}"

# For standalone configurations, we also include a .so version number.

. $srcdir/VERSION
AC_SUBST([libnetloc_so_version])

# Setup the header file
AH_TOP([/* -*- c -*-
 *
 * Copyright Â© 2013 Cisco Systems, Inc.  All rights reserved.
 * $COPYRIGHT$
 * 
 * Additional copyrights may follow
 * 
 * $HEADER$
 *
 * This file is automatically generated by configure.  Edits will be lost
 * the next time you run configure!
*/

#ifndef NETLOC_CONFIGURE_H
#define NETLOC_CONFIGURE_H
])
AH_BOTTOM([
#endif /* NETLOC_CONFIGURE_H */
])

AC_CONFIG_HEADERS([include/private/autogen/config.h])
AC_CONFIG_HEADERS([include/netloc/autogen/config.h])
dnl AC_CONFIG_HEADERS([include/private/autogen/config.h])

# Setup C++ compiler

CXXFLAGS_save=$CXXFLAGS
AC_PROG_CXX
AM_PROG_CC_C_O
AC_PROG_CC_C99
CXXFLAGS=$CXXFLAGS_save
# This did not exist pre AM 1.11.x (where x is somewhere >0 and <3),
# but it is necessary in AM 1.12.x.
m4_ifdef([AM_PROG_AR], [AM_PROG_AR])

#
# Ensure that we have the STL
#
AC_MSG_CHECKING([for the STL (C++11 or better)])
AC_LANG([C++])
AC_LINK_IFELSE([
    AC_LANG_PROGRAM([[
#include <string>
#include <map>
using namespace std;
]], [[
map<string, string> m;
string a, b;
a = "hello";
b = "world";
m[a] = b;
b = m.at(a);]])
], [AC_MSG_RESULT([yes])], 
   [AC_MSG_RESULT([no])
    AC_MSG_WARN([You do not appear to have the STL])
    AC_MSG_ERROR([Cannot continue])
   ])


#
# Ensure that we have the Jansson Library (Parsing JSON)
# http://www.digip.org/jansson/
#
AC_ARG_WITH([jansson],
     AC_HELP_STRING([--with-jansson=DIR],
                    [Specify the prefix of your jansson installation]))

# Basic sanity check on the --with-jansson value
AC_MSG_CHECKING([with --with-jansson])
AS_IF([test "$with_jansson" = "no"], 
      [AC_MSG_RESULT([bad])
       AC_MSG_WARN([You cannot specify --without-jansson])
       AC_MSG_ERROR([Cannot conntinue])
      ])
AS_IF([test "$with_jansson" = "yes" -o -z "$with_jansson"],
      [AC_MSG_RESULT([ok (unspecified)])
       LIBS="$LIBS -ljansson"
      ],
      [AS_IF([test -f "$with_jansson/include/jansson.h"],
             [AC_MSG_RESULT([good ($with_jansson)])
              CPPFLAGS="$CPPFLAGS -I$with_jansson/include"
              LDFLAGS="$LDFLAGS -L$with_jansson/lib"
              LIBS="$LIBS -ljansson"],
             [AC_MSG_RESULT([bad ($with_jansson)])
              AC_MSG_WARN([$with_jansson/include/jansson.h not found])
              AC_MSG_ERROR([Cannot continue])])
      ])

jansson_happy=0
AC_CHECK_HEADER([jansson.h], [jansson_happy=1])
AS_IF([test "$jansson_happy" = "0"],
      [AC_MSG_WARN([Cannot find jansson.h])
       AC_MSG_WARN([Perhaps you need to specify --with-jansson, or some CPPFLAGS?])
       AC_MSG_ERROR([Cannot continue])])

jansson_happy=0
AC_CHECK_LIB([jansson], [json_true], [jansson_happy=1])
AS_IF([test "$jansson_happy" = "0"],
      [AC_MSG_WARN([Cannot find libjansson])
       AC_MSG_WARN([Perhaps you need to specify --with-jansson, or some LDFLAGS?])
       AC_MSG_ERROR([Cannot continue])])

jansson_happy=0
AC_TRY_COMPILE([#include <jansson.h>],
    [#if JANSSON_MAJOR_VERSION < 2
     #error Require version earlier than 2.3
     #endif
     #if JANSSON_MAJOR_VERSION == 2 && JANSSON_MINOR_VERSION < 3
     #error Require version earlier than 2.3
     #endif
     ],
    [jansson_happy=1],
    [jansson_happy=0])
AS_IF([test "$jansson_happy" = "0"],
      [AC_MSG_WARN([Version of Jansson is too old.])
       AC_MSG_WARN([We require version 2.3 or later.])
       AC_MSG_ERROR([Cannot continue])])

#
# Check for compiler attributes and visibility
#
_NETLOC_C_COMPILER_VENDOR([netloc_c_vendor])
_NETLOC_CHECK_ATTRIBUTES
_NETLOC_CHECK_VISIBILITY
NETLOC_CFLAGS="$NETLOC_FLAGS $NETLOC_VISIBILITY_CFLAGS"
AS_IF([test "$NETLOC_VISIBILITY_CFLAGS" != ""],
      [AC_MSG_WARN(["$NETLOC_VISIBILITY_CFLAGS" has been added to the netloc CFLAGS])])

#
# Look for hwloc; error if we can't find it
#
AC_ARG_WITH([hwloc],
     AC_HELP_STRING([--with-hwloc=DIR],
                    [Specify the prefix of your hwloc installation]))

# Basic sanity check on the --with-hwloc value
AC_MSG_CHECKING([with --with-hwloc])
AS_IF([test "$with_hwloc" = "no"], 
      [AC_MSG_RESULT([bad])
       AC_MSG_WARN([You cannot specify --without-hwloc])
       AC_MSG_ERROR([Cannot conntinue])
      ])
AS_IF([test "$with_hwloc" = "yes" -o -z "$with_hwloc"],
      [AC_MSG_RESULT([ok (unspecified)])],
      [AS_IF([test -f "$with_hwloc/include/hwloc.h"],
             [AC_MSG_RESULT([good ($with_hwloc)])
              CPPFLAGS="$CPPFLAGS -I$with_hwloc/include"
              LDFLAGS="$LDFLAGS -L$with_hwloc/lib"],
             [AC_MSG_RESULT([bad ($with_hwloc)])
              AC_MSG_WARN([$with_hwloc/include/hwloc.h not found])
              AC_MSG_ERROR([Cannot continue])])
      ])

hwloc_happy=0
AC_CHECK_HEADER([hwloc.h], [hwloc_happy=1])
AS_IF([test "$hwloc_happy" = "0"],
      [AC_MSG_WARN([Cannot find hwloc.h])
       AC_MSG_WARN([Perhaps you need to specify --with-hwloc, or some CPPFLAGS?])
       AC_MSG_ERROR([Cannot continue])])

hwloc_happy=0
AC_CHECK_LIB([hwloc], [hwloc_topology_init], [hwloc_happy=1])
AS_IF([test "$hwloc_happy" = "0"],
      [AC_MSG_WARN([Cannot find libhwloc])
       AC_MSG_WARN([Perhaps you need to specify --with-hwloc, or some LDFLAGS?])
       AC_MSG_ERROR([Cannot continue])])

#
# Setup libtool, but disable C++, F77, Java and Windows Resource
# Compiler support -- we don't need that stuff.
#
AM_ENABLE_SHARED
AM_DISABLE_STATIC
AM_PROG_LIBTOOL
LT_LANG([CXX])

AC_CONFIG_FILES([
   Makefile

   include/Makefile
   src/Makefile
   tools/Makefile
   tools/reader_ib/Makefile
   tools/reader_of/Makefile
   tools/lsnettopo/Makefile
   tools/gather_ib/Makefile
   tests/Makefile
])

# Party on
AC_OUTPUT
